package sslights::processing::sphere_clincher
public
	--- has to have two input ports (inputing speed and distance from speed_assessor and distance_calc) and two output ports giving
	--- out lampposts ids and actuation_type  
	with sslights::datatypes;

	process sphere_clincher
		features
			speed : in data port sslights::datatypes::speed;
			distance : in data port sslights::datatypes::distance;
			lp_ids : out data port sslights::datatypes::lamppost.i;
			act_type : out data port sslights::datatypes::actuation_type;
		flows
			f0 : flow path speed -> lp_ids;
			f1 : flow path distance -> lp_ids;
			f2 : flow path speed -> act_type;
			f3 : flow path distance -> act_type;
	end sphere_clincher;
	
	process implementation sphere_clincher.i
		subcomponents
			thr : thread sphere_clincher_thr.i;
		connections
			c0 : port speed -> thr.speed;
			c1 : port distance -> thr.distance;
			c2 : port thr.lp_ids -> lp_ids;
			c3 : port thr.act_type -> act_type;
		flows
				-- speed to lp_ids; distance to lp_ids; speed to act_type; distance to act_type --
			f0 : flow path speed -> c0 -> thr.f0 -> c2 -> lp_ids;
			f1 : flow path distance -> c1 -> thr.f1 -> c2 -> lp_ids;
			f2 : flow path speed -> c0 -> thr.f2 -> c3 -> act_type;
			f3 : flow path distance -> c1 -> thr.f3 -> c3 -> act_type;
	end sphere_clincher.i;

	thread sphere_clincher_thr
		features
			speed : in data port sslights::datatypes::speed;
			distance : in data port sslights::datatypes::distance;
			lp_ids : out data port sslights::datatypes::lamppost.i;
			act_type : out data port sslights::datatypes::actuation_type;
		flows
			f0 : flow path speed -> lp_ids;
			f1 : flow path distance -> lp_ids;
			f2 : flow path speed -> act_type;
			f3 : flow path distance -> act_type;
		properties
			Dispatch_Protocol => Periodic;
			Period => 8ms;
	end sphere_clincher_thr;

	thread implementation sphere_clincher_thr.i
	end sphere_clincher_thr.i;
end sslights::processing::sphere_clincher;